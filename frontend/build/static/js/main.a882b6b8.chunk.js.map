{"version":3,"sources":["components/ToggleSide.js","features/users/usersAPI.js","app/setAuthToken.js","features/users/usersSlice.js","features/stations/stationsAPI.js","features/stations/stationsSlice.js","components/forms/Login.js","components/forms/Register.js","components/forms/Profile.js","components/Message.js","components/StationsList.js","components/Sidebar.js","components/MapInfo.js","app/sensorLabels.js","components/forms/Station.js","components/Radar.js","components/StationView.js","components/Main.js","app/store.js","App.js","reportWebVitals.js","index.js"],"names":["ToggleSide","toggleSidebar","className","IconButton","onClick","fontSize","color","loadUser","a","axios","get","res","data","login","formData","post","Error","response","message","register","success","uploadPhoto","photo","FormData","append","put","update","remove","delete","setAuthToken","token","defaults","headers","common","usersSlice","createSlice","name","initialState","isAuthenticated","loading","user","error","reducers","loggedIn","state","action","payload","loggedOut","loaded","setError","actions","dispatch","loginAPI","localStorage","setItem","registerAPI","updateAPI","searchAddress","address","createStation","latlng","ll","lat","lng","newStation","location","type","coordinates","formattedAddress","sensors","saveStation","updateStation","station","stationProfile","_id","removeStation","stationId","loadStationsRadius","center","radius","loadStationsBox","bl","tr","cbl","ctr","stationsSlice","stations","setLocation","created","push","stationsLoaded","updated","index","findIndex","splice","removed","filter","setStation","Login","open","handleClose","switchLoginRegister","useDispatch","useState","email","password","setFormData","onChange","e","target","id","value","onSubmit","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","test","fullWidth","InputProps","startAdornment","InputAdornment","position","DialogActions","Button","variant","style","Register","password2","length","Profile","useSelector","users","useEffect","sendData","Object","assign","disabled","removeAPI","Message","userError","handleCloseAlert","Snackbar","autoHideDuration","Alert","severity","StationsList","authUser","List","dense","overflow","marginTop","map","ListItem","setViewStation","ListItemText","secondaryTypographyProps","noWrap","primary","secondary","ListItemSecondaryAction","edge","useStyles","makeStyles","root","padding","width","maxWidth","centerLine","display","justifyContent","alignItems","toolButton","inputLine","divLine","marginBottom","Sidebar","adding","setAddMode","radar","setRadar","classes","userLoading","userName","userAvatar","image","React","openLogin","setOpenLogin","openRegister","setOpenRegister","openProfile","setOpenProfile","setAddress","Drawer","anchor","PaperProps","accept","files","size","uploadPhotoAPI","htmlFor","component","marginRight","Avatar","alt","src","Date","getTime","title","marginLeft","err","console","log","startIcon","LinearProgress","Divider","InputBase","placeholder","endAdornment","searchAddressAPI","latitude","longitude","MapInfo","addNewStation","setPosition","useMapEvents","click","mousemove","mouseout","Fab","Typography","toFixed","AirTemperature","Humidity","AirPressure","WindSpeed","WindDirection","Station","stationForm","setStationForm","handleChange","sensorCheck","keys","forEach","key","includes","stateCheck","setStateCheck","handleChangeCheck","event","checked","FormGroup","row","sensor","FormControlLabel","control","Checkbox","newSensors","updateStationAPI","saveStationAPI","removeStationAPI","Radar","setRadius","Card","CardContent","paddingTop","paddingBottom","Slider","marks","min","max","step","valueLabelDisplay","newValue","onChangeCommitted","iconSpace","flexWrap","iconLine","StationView","join","Chip","createdAt","toLocaleDateString","StationsRectangle","useMapEvent","moveend","loadStations","getBounds","bounds","_southWest","_northEast","loadStationsBoxAPI","RadarCircle","circleRef","useRef","getCenter","current","fitBounds","loadStationsRadiusAPI","Circle","fill","fillOpacity","opacity","ref","Main","zoom","L","Icon","Default","imagePath","setNewStation","stationLoading","stationLoaded","addStation","setAddStation","mode","viewSidebar","setViewSidebar","setMap","setView","getZoom","setTimeout","setZoom","Backdrop","zIndex","CircularProgress","MapContainer","scrollWheelZoom","zoomControl","whenCreated","cursor","TileLayer","attribution","url","el","Marker","eventHandlers","Tooltip","defaultProps","configureStore","reducer","usersReducer","stationsReducer","App","theme","createMuiTheme","palette","blue","props","MuiButtonBase","disableRipple","store","loadUserAPI","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a882b6b8.chunk.js","sourcesContent":["import IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nconst ToggleSide = ({ toggleSidebar }) => {\n  return (\n    <div className=\"leaflet-top leaflet-left\">\n      <div className=\"leaflet-control leaflet-bar\">\n        <IconButton onClick={toggleSidebar}>\n          <MenuIcon fontSize=\"large\" color=\"primary\" />\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n\nexport default ToggleSide\n","import axios from 'axios'\n\nexport const loadUser = async () => {\n  try {\n    const res = await axios.get('/api/users/myProfile')\n    return res.data\n  } catch (err) {\n    return\n  }\n}\n\nexport const login = async (formData) => {\n  try {\n    const { data } = await axios.post(\n      '/api/users/login',\n      formData\n    )\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const register = async (formData) => {\n  try {\n    const { data } = await axios.post(\n      '/api/users',\n      formData\n    )\n    if (!data.success) {\n      throw Error('Ошибка в данных')\n    }\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const uploadPhoto = async (photo) => {\n  const formData = new FormData()\n  formData.append('file', photo)\n  try {\n    const { data } = await axios.put(\n      '/api/users/photo',\n      formData\n    )\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const update = async (formData) => {\n  try {\n    const { data } = await axios.put(\n      '/api/users/myProfile',\n      formData\n    )\n    if (!data.success) {\n      throw Error('Ошибка в данных')\n    }\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const remove = async () => {\n  try {\n    const { data } = await axios.delete(\n      '/api/users/myProfile'\n    )\n    if (!data.success) {\n      throw Error('Ошибка удаления профиля')\n    }\n    return {}\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n","import axios from 'axios'\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\n      'Authorization'\n    ] = `Bearer ${token}`\n  } else {\n    delete axios.defaults.headers.common['Authorization']\n  }\n}\n\nexport default setAuthToken\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  loadUser as loadUserAPI,\n  login as loginAPI,\n  register as registerAPI,\n  uploadPhoto as uploadPhotoAPI,\n  update as updateAPI,\n  remove as removeAPI,\n} from './usersAPI'\nimport setAuthToken from '../../app/setAuthToken'\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    isAuthenticated: false,\n    loading: false,\n    user: {},\n    error: null,\n  },\n  reducers: {\n    loggedIn: (state, action) => {\n      state.isAuthenticated = true\n      state.loading = false\n      state.user = action.payload\n    },\n    loggedOut: (state) => {\n      state.isAuthenticated = false\n      state.loading = false\n      state.user = {}\n    },\n    loading: (state, action) => {\n      state.loading = true\n    },\n    loaded: (state, action) => {\n      state.loading = false\n    },\n    setError: (state, action) => {\n      state.error = action.payload\n    },\n  },\n})\n\nexport const {\n  loggedIn,\n  loggedOut,\n  loading,\n  loaded,\n  setError,\n} = usersSlice.actions\n\nexport const login = (formData) => async (dispatch) => {\n  try {\n    dispatch(loading())\n    const res = await loginAPI(formData)\n    localStorage.setItem('token', res.data.token)\n    setAuthToken(res.data.token)\n    dispatch(loggedIn({ ...res.data }))\n  } catch (err) {\n    dispatch(loggedOut())\n    dispatch(setError(err.message))\n  }\n}\n\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const data = await loadUserAPI()\n    if (data) {\n      dispatch(loggedIn(data))\n    }\n  } catch (err) {\n    console.log(err.message)\n  }\n}\n\nexport const logoutUser = () => async (dispatch) => {\n  try {\n    delete localStorage.token\n    setAuthToken()\n    dispatch(loggedOut())\n  } catch (err) {\n    console.log(err.message)\n  }\n}\n\nexport const register = (formData) => async (dispatch) => {\n  try {\n    dispatch(loading())\n    const res = await registerAPI(formData)\n    localStorage.setItem('token', res.data.token)\n    setAuthToken(res.data.token)\n    dispatch(loggedIn({ ...res.data }))\n  } catch (err) {\n    dispatch(loggedOut())\n    dispatch(setError(err.message))\n  }\n}\n\nexport const uploadPhoto = (photo) => async (dispatch) => {\n  try {\n    dispatch(loading())\n    const res = await uploadPhotoAPI(photo)\n    dispatch(loggedIn({ ...res.data }))\n  } catch (err) {\n    dispatch(loaded())\n    dispatch(setError(err.message))\n  }\n}\n\nexport const update = (formData) => async (dispatch) => {\n  try {\n    dispatch(loading())\n    const res = await updateAPI(formData)\n    dispatch(loggedIn({ ...res.data }))\n  } catch (err) {\n    dispatch(loaded())\n    dispatch(setError(err.message))\n  }\n}\n\nexport const remove = () => async (dispatch) => {\n  try {\n    dispatch(loading())\n    await removeAPI()\n    delete localStorage.token\n    setAuthToken()\n    dispatch(loggedOut())\n  } catch (err) {\n    dispatch(loaded())\n    dispatch(setError(err.message))\n  }\n}\n\nexport const selectUser = (state) => state.user\n\nexport default usersSlice.reducer\n","import axios from 'axios'\n\nexport const searchAddress = async (address) => {\n  try {\n    const { data } = await axios.get(\n      `/api/stations/address/${address}`\n    )\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const createStation = async (latlng) => {\n  try {\n    const ll = latlng.lat + ',' + latlng.lng\n    const res = await axios.get(\n      `/api/stations/latlng/${ll}`\n    )\n    const newStation = {\n      name: '',\n      location: {\n        type: 'Point',\n        coordinates: [latlng.lat, latlng.lng],\n        formattedAddress: res.data.data[0].formattedAddress,\n      },\n      sensors: [],\n    }\n    return newStation\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const saveStation = async (formData) => {\n  try {\n    const { data } = await axios.post(\n      '/api/stations',\n      formData\n    )\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const loadStations = async () => {\n  try {\n    const { data } = await axios.get('/api/stations')\n    return data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const updateStation = async (station) => {\n  const stationProfile = {\n    name: station.name,\n    location: station.location,\n    sensors: station.sensors,\n  }\n  try {\n    const res = await axios.put(\n      `/api/stations/${station._id}`,\n      stationProfile\n    )\n    return res.data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const removeStation = async (stationId) => {\n  try {\n    await axios.delete(`/api/stations/${stationId}`)\n    return {}\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const loadStationsRadius = async (\n  center,\n  radius\n) => {\n  const ll = center.lat + ',' + center.lng\n  try {\n    const res = await axios.get(\n      `/api/stations/radius/${ll}/${radius}`\n    )\n    return res.data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n\nexport const loadStationsBox = async (bl, tr) => {\n  const cbl = bl.lat + ',' + bl.lng\n  const ctr = tr.lat + ',' + tr.lng\n  try {\n    const res = await axios.get(\n      `/api/stations/box/${cbl}/${ctr}`\n    )\n    return res.data\n  } catch (err) {\n    throw Error(\n      err.response && err.response.data.message\n        ? err.response.data.message\n        : err.message\n    )\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport {\n  searchAddress as searchAddressAPI,\n  saveStation as saveStationAPI,\n  loadStations as loadStationsAPI,\n  updateStation as updateStationAPI,\n  removeStation as removeStationAPI,\n  loadStationsRadius as loadStationsRadiusAPI,\n  loadStationsBox as loadStationsBoxAPI,\n} from './stationsAPI'\n\nexport const stationsSlice = createSlice({\n  name: 'stations',\n  initialState: {\n    location: [59.889651, 29.87631],\n    loading: false,\n    stations: [],\n    station: null,\n    error: '',\n  },\n  reducers: {\n    loading: (state, action) => {\n      state.loading = true\n    },\n    loaded: (state, action) => {\n      state.loading = false\n    },\n    setLocation: (state, action) => {\n      state.location = action.payload\n      state.loading = false\n    },\n    setError: (state, action) => {\n      state.error = action.payload\n      state.loading = false\n    },\n    created: (state, action) => {\n      state.loading = false\n      state.stations.push(action.payload)\n    },\n    stationsLoaded: (state, action) => {\n      state.loading = false\n      state.stations = action.payload\n    },\n    updated: (state, action) => {\n      state.loading = false\n      const index = state.stations.findIndex(\n        (station) => station._id === action.payload._id\n      )\n      state.stations.splice(index, 1, action.payload)\n    },\n    removed: (state, action) => {\n      state.loading = false\n      state.stations = state.stations.filter(\n        (station) => station._id !== action.payload\n      )\n    },\n    setStation: (state, action) => {\n      state.station = action.payload\n    },\n  },\n})\n\nexport const {\n  loading,\n  loaded,\n  setLocation,\n  setError,\n  created,\n  stationsLoaded,\n  updated,\n  removed,\n  setStation,\n} = stationsSlice.actions\n\nexport const searchAddress =\n  (address) => async (dispatch) => {\n    try {\n      dispatch(loading())\n      const { data } = await searchAddressAPI(address)\n      dispatch(\n        setLocation([data[0].latitude, data[0].longitude])\n      )\n    } catch (err) {\n      dispatch(loaded())\n      dispatch(setError(err.message))\n    }\n  }\n\nexport const saveStation =\n  (formData) => async (dispatch) => {\n    try {\n      dispatch(loading())\n      const res = await saveStationAPI(formData)\n      dispatch(created({ ...res.data }))\n    } catch (err) {\n      dispatch(setError(err.message))\n      dispatch(loaded())\n    }\n  }\n\nexport const loadStations = () => async (dispatch) => {\n  try {\n    dispatch(loading())\n    const res = await loadStationsAPI()\n    dispatch(stationsLoaded(res.data))\n  } catch (err) {\n    dispatch(setError(err.message))\n    dispatch(loaded())\n  }\n}\n\nexport const updateStation =\n  (station) => async (dispatch) => {\n    try {\n      dispatch(loading())\n      const res = await updateStationAPI(station)\n      dispatch(updated({ ...res.data }))\n    } catch (err) {\n      dispatch(setError(err.message))\n      dispatch(loaded())\n    }\n  }\n\nexport const removeStation =\n  (stationId) => async (dispatch) => {\n    try {\n      dispatch(loading())\n      await removeStationAPI(stationId)\n      dispatch(removed(stationId))\n    } catch (err) {\n      dispatch(setError(err.message))\n      dispatch(loaded())\n    }\n  }\n\nexport const loadStationsRadius =\n  (center, radius) => async (dispatch) => {\n    try {\n      dispatch(loading())\n      const res = await loadStationsRadiusAPI(\n        center,\n        radius\n      )\n      dispatch(stationsLoaded(res.data))\n    } catch (err) {\n      dispatch(setError(err.message))\n      dispatch(loaded())\n    }\n  }\n\nexport const loadStationsBox =\n  (bl, tr) => async (dispatch) => {\n    try {\n      dispatch(loading())\n      const res = await loadStationsBoxAPI(bl, tr)\n      dispatch(stationsLoaded(res.data))\n    } catch (err) {\n      dispatch(setError(err.message))\n      dispatch(loaded())\n    }\n  }\n\nexport default stationsSlice.reducer\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport { login } from '../../features/users/usersSlice'\n\nconst Login = ({\n  open,\n  handleClose,\n  switchLoginRegister,\n}) => {\n  const dispatch = useDispatch()\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  })\n  const { email, password } = formData\n\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    })\n  const onSubmit = async (e) => {\n    dispatch(login(formData))\n    handleClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Авторизация</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Для входа в систему введите email и пароль\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          value={email}\n          error={!/.+@.+\\..+/.test(email)}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          fullWidth\n          value={password}\n          onChange={onChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Назад\n        </Button>\n        <Button onClick={onSubmit} color=\"primary\">\n          Вход\n        </Button>\n      </DialogActions>\n      <Button\n        variant=\"outlined\"\n        onClick={switchLoginRegister}\n        style={{ margin: '12px' }}\n      >\n        Нет учетной записи? Зарегистрируйтесь\n      </Button>\n    </Dialog>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined'\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport {\n  register,\n  setError,\n} from '../../features/users/usersSlice'\n\nconst Register = ({\n  open,\n  handleClose,\n  switchLoginRegister,\n}) => {\n  const dispatch = useDispatch()\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    email: '',\n    password: '',\n    password2: '',\n  })\n  const { name, address, email, password, password2 } =\n    formData\n\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    })\n  const onSubmit = async (e) => {\n    if (name.length === 0) {\n      dispatch(setError('Введите имя'))\n    } else if (address.length === 0) {\n      dispatch(setError('Введите адрес'))\n    } else {\n      dispatch(register(formData))\n      handleClose()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>\n        Регистрация нового пользователя\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Для регистрации необходимо ввести все поля\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          value={name}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AccountCircleOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          value={email}\n          error={!/.+@.+\\..+/.test(email)}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"address\"\n          label=\"Адрес\"\n          type=\"text\"\n          value={address}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LocationOnOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          fullWidth\n          value={password}\n          error={password.length < 6}\n          onChange={onChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"password2\"\n          label=\"Повторите пароль\"\n          type=\"password\"\n          fullWidth\n          value={password2}\n          error={password2 !== password}\n          onChange={onChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Отказ\n        </Button>\n        <Button onClick={onSubmit} color=\"primary\">\n          Регистрация\n        </Button>\n      </DialogActions>\n      <Button\n        variant=\"outlined\"\n        onClick={switchLoginRegister}\n        style={{ margin: '12px' }}\n      >\n        Нет учетной записи? Авторизация\n      </Button>\n    </Dialog>\n  )\n}\n\nexport default Register\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined'\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport {\n  setError,\n  remove,\n  update,\n} from '../../features/users/usersSlice'\n\nconst Profile = ({ open, handleClose }) => {\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.users.user)\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    email: '',\n    password: '',\n    password2: '',\n  })\n\n  useEffect(() => {\n    setFormData({\n      name: user.name,\n      address: user.location\n        ? user.location.formattedAddress\n        : '',\n      email: user.email,\n      password: '',\n      password2: '',\n    })\n  }, [user])\n\n  const name = formData.name || ''\n  const address = formData.address || ''\n  const email = formData.email || ''\n  const password = formData.password || ''\n  const password2 = formData.password2 || ''\n\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    })\n  const onSubmit = async (e) => {\n    if (name.length === 0) {\n      dispatch(setError('Введите имя'))\n    } else if (address.length === 0) {\n      dispatch(setError('Введите адрес'))\n    } else if (\n      password.length > 1 &&\n      (password.length < 6 || password !== password2)\n    ) {\n      dispatch(setError('Ошибка в пароле'))\n    } else {\n      let sendData = { name, address }\n      if (password.length > 1) {\n        Object.assign(sendData, { password })\n      }\n      dispatch(update(sendData))\n      handleClose()\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>\n        Изменение профиля пользователя\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          value={name}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AccountCircleOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          disabled\n          value={email}\n          error={!/.+@.+\\..+/.test(email)}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"address\"\n          label=\"Адрес\"\n          type=\"text\"\n          value={address}\n          onChange={onChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LocationOnOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          fullWidth\n          value={password}\n          error={password.length < 6}\n          onChange={onChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"password2\"\n          label=\"Повторите пароль\"\n          type=\"password\"\n          fullWidth\n          value={password2}\n          error={password2 !== password}\n          onChange={onChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockOutlinedIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Назад\n        </Button>\n        <Button onClick={onSubmit} color=\"primary\">\n          Сохранить\n        </Button>\n      </DialogActions>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          dispatch(remove())\n          handleClose()\n        }}\n        style={{ margin: '12px' }}\n      >\n        Удалить профиль\n      </Button>\n    </Dialog>\n  )\n}\n\nexport default Profile\n","import { useSelector, useDispatch } from 'react-redux'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nimport { setError } from '../features/users/usersSlice'\n\nconst Message = () => {\n  const dispatch = useDispatch()\n  const userError = useSelector(\n    (state) => state.users.error\n  )\n  const handleCloseAlert = () => {\n    dispatch(setError(null))\n  }\n  return (\n    <Snackbar\n      open={userError !== null}\n      autoHideDuration={3000}\n      onClose={handleCloseAlert}\n    >\n      <Alert\n        onClose={handleCloseAlert}\n        variant=\"filled\"\n        severity=\"error\"\n      >\n        {userError}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default Message\n","import { useSelector, useDispatch } from 'react-redux'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport { setStation as setViewStation } from '../features/stations/stationsSlice'\n\nconst StationsList = ({ setStation }) => {\n  const dispatch = useDispatch()\n  const stations = useSelector(\n    (state) => state.stations.stations\n  )\n  const authUser = useSelector((state) => state.users.user)\n  return (\n    <List\n      dense\n      style={{ overflow: 'auto', marginTop: '8px' }}\n    >\n      {stations.map((station) => (\n        <ListItem\n          key={station._id}\n          onClick={() => dispatch(setViewStation(station))}\n        >\n          <ListItemText\n            secondaryTypographyProps={{ noWrap: true }}\n            primary={station.name}\n            secondary={station.location.formattedAddress}\n          />\n          <ListItemSecondaryAction>\n            {authUser && authUser._id === station.user ? (\n              <IconButton\n                onClick={() => setStation(station)}\n                edge=\"end\"\n              >\n                <EditIcon />\n              </IconButton>\n            ) : null}\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nexport default StationsList\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputBase from '@material-ui/core/InputBase'\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\nimport AddIcon from '@material-ui/icons/Add'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Avatar from '@material-ui/core/Avatar'\n\nimport {\n  logoutUser,\n  setError,\n  uploadPhoto,\n} from '../features/users/usersSlice'\nimport { searchAddress } from '../features/stations/stationsSlice'\n\nimport Login from './forms/Login'\nimport Register from './forms/Register'\nimport Profile from './forms/Profile'\nimport Message from './Message'\nimport StationsList from './StationsList'\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '8px',\n    width: '100%',\n    maxWidth: 400,\n  },\n  centerLine: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  toolButton: {\n    fontSize: '0.75rem',\n  },\n  inputLine: {\n    padding: '8px',\n  },\n  divLine: {\n    marginBottom: '8px',\n  },\n})\n\nconst Sidebar = ({\n  open,\n  toggleSidebar,\n  adding,\n  setAddMode,\n  setStation,\n  radar,\n  setRadar,\n}) => {\n  const classes = useStyles()\n\n  const isAuthenticated = useSelector(\n    (state) => state.users.isAuthenticated\n  )\n  const userLoading = useSelector(\n    (state) => state.users.loading\n  )\n  const userName = useSelector(\n    (state) => state.users.user.name\n  )\n  const userAvatar = useSelector(\n    (state) => state.users.user.image\n  )\n\n  const dispatch = useDispatch()\n\n  const [openLogin, setOpenLogin] = React.useState(false)\n  const handleClickLoginOpen = () => {\n    setOpenLogin(true)\n  }\n  const handleLoginClose = () => {\n    setOpenLogin(false)\n  }\n\n  const [openRegister, setOpenRegister] =\n    React.useState(false)\n  const handleRegisterClose = () => {\n    setOpenRegister(false)\n  }\n\n  const switchLoginRegister = () => {\n    setOpenLogin(!openLogin)\n    setOpenRegister(!openRegister)\n  }\n\n  const [openProfile, setOpenProfile] =\n    React.useState(false)\n  const handleProfileClose = () => {\n    setOpenProfile(false)\n  }\n\n  const [address, setAddress] = React.useState('')\n\n  return (\n    <>\n      <Drawer\n        anchor={'left'}\n        open={open}\n        variant=\"persistent\"\n        PaperProps={{ classes: { root: classes.root } }}\n      >\n        <div className={classes.centerLine}>\n          <IconButton onClick={toggleSidebar}>\n            <ChevronLeftIcon fontSize=\"large\" />\n          </IconButton>\n          {isAuthenticated && (\n            <Button variant=\"outlined\">\n              <input\n                accept=\"image/*\"\n                id=\"icon-button-file\"\n                type=\"file\"\n                style={{ display: 'none' }}\n                onChange={(e) => {\n                  if (e.target.files[0].size < 1000000) {\n                    dispatch(uploadPhoto(e.target.files[0]))\n                  } else {\n                    dispatch(\n                      setError(\n                        'Выберите, пожалуйста, файл меньше 1Мб'\n                      )\n                    )\n                  }\n                }}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  component=\"span\"\n                  style={{ marginRight: '8px', padding: 0 }}\n                >\n                  {userAvatar ? (\n                    <Avatar\n                      alt={userName}\n                      src={`/uploads/${userAvatar}?${new Date().getTime()}`}\n                    />\n                  ) : (\n                    <AccountCircleIcon />\n                  )}\n                </IconButton>\n              </label>\n              <div onClick={() => setOpenProfile(true)}>\n                {userName}\n              </div>\n              <Tooltip title=\"Выйти\">\n                <ExitToAppIcon\n                  style={{ marginLeft: '8px' }}\n                  onClick={() => {\n                    dispatch(logoutUser())\n                  }}\n                />\n              </Tooltip>\n            </Button>\n          )}\n          {!isAuthenticated && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              startIcon={<ExitToAppIcon />}\n              onClick={() => {\n                handleClickLoginOpen()\n              }}\n            >\n              Войти\n            </Button>\n          )}\n          {userLoading && <LinearProgress />}\n        </div>\n        <Divider />\n        <InputBase\n          placeholder=\"Город, Область\"\n          autoFocus={true}\n          fullWidth\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                type=\"submit\"\n                onClick={() =>\n                  dispatch(searchAddress(address))\n                }\n              >\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          className={classes.inputLine}\n        />\n        <Divider className={classes.divLine} />\n        <div className={classes.centerLine}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => setRadar(radar ? null : 10)}\n            startIcon={<RadioButtonUncheckedIcon />}\n            className={classes.toolButton}\n          >\n            {radar ? 'Выключить радар' : 'Радар'}\n          </Button>\n          <Button\n            disabled={!isAuthenticated || adding}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<AddIcon />}\n            className={classes.toolButton}\n            onClick={() => setAddMode(true)}\n          >\n            Добавить станцию\n          </Button>\n        </div>\n        <StationsList setStation={setStation} />\n      </Drawer>\n      <Login\n        open={openLogin}\n        handleClose={handleLoginClose}\n        switchLoginRegister={switchLoginRegister}\n      />\n      <Register\n        open={openRegister}\n        handleClose={handleRegisterClose}\n        switchLoginRegister={switchLoginRegister}\n      />\n      <Profile\n        open={openProfile}\n        handleClose={handleProfileClose}\n      />\n      <Message />\n    </>\n  )\n}\n\nexport default Sidebar\n","import { useState } from 'react'\nimport { useMapEvents } from 'react-leaflet'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport { Typography } from '@material-ui/core'\n\nconst MapInfo = ({ setAddMode, addNewStation }) => {\n  const [position, setPosition] = useState(null)\n\n  const map = useMapEvents({\n    click(e) {\n      addNewStation(e.latlng)\n      setAddMode(false)\n    },\n    mousemove(e) {\n      setPosition(e.latlng)\n    },\n    mouseout(e) {\n      setAddMode(false)\n    },\n  })\n\n  return position === null ? null : (\n    <div className=\"leaflet-top leaflet-right\">\n      <div className=\"leaflet-control\">\n        <Fab\n          variant=\"extended\"\n          size=\"medium\"\n          color=\"primary\"\n        >\n          <AddIcon />\n          <Typography variant=\"body2\" noWrap>\n            {position.lng.toFixed(4)},{' '}\n            {position.lat.toFixed(4)}\n          </Typography>\n        </Fab>\n      </div>\n    </div>\n  )\n}\n\nexport default MapInfo\n","const sensors = {\n  AirTemperature: 'Температура',\n  Humidity: 'Влажность',\n  AirPressure: 'Атм.давление',\n  WindSpeed: 'Скорость ветра',\n  WindDirection: 'Направление ветра',\n}\n\nexport default sensors\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport sensors from '../../app/sensorLabels'\nimport {\n  saveStation,\n  updateStation,\n  removeStation,\n} from '../../features/stations/stationsSlice'\n\nconst Station = ({ station, setStation }) => {\n  const dispatch = useDispatch()\n  const [stationForm, setStationForm] = useState({\n    name: station.name,\n    formattedAddress: station.location.formattedAddress,\n  })\n\n  const name = stationForm.name || ''\n  const formattedAddress = stationForm.formattedAddress\n\n  const handleChange = (e) =>\n    setStationForm({\n      ...stationForm,\n      [e.target.id]: e.target.value,\n    })\n\n  const sensorCheck = { ...sensors }\n  Object.keys(sensorCheck).forEach(\n    (key) =>\n      (sensorCheck[key] = station.sensors.includes(key))\n  )\n  const [stateCheck, setStateCheck] = useState(sensorCheck)\n  const handleChangeCheck = (event) => {\n    setStateCheck({\n      ...stateCheck,\n      [event.target.name]: event.target.checked,\n    })\n  }\n\n  const onSave = () => {\n    const newSensors = []\n    Object.keys(stateCheck)\n      .filter((sensor) => stateCheck[sensor])\n      .forEach((sensor) => {\n        newSensors.push(sensor)\n      })\n    if (station._id) {\n      dispatch(\n        updateStation({\n          _id: station._id,\n          name: name,\n          location: {\n            ...station.location,\n            formattedAddress,\n          },\n          sensors: newSensors,\n        })\n      )\n    } else {\n      station.name = name\n      station.location.formattedAddress = formattedAddress\n      station.sensors = newSensors\n      dispatch(saveStation(station))\n    }\n    setStation(null)\n  }\n\n  return (\n    <Dialog\n      open={station !== null}\n      onClose={() => setStation(null)}\n      fullWidth\n    >\n      <DialogTitle>\n        {station && station._id\n          ? 'Изменение параметров станции'\n          : 'Добавление новой станции'}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          margin=\"dense\"\n          autoFocus\n          id=\"name\"\n          label=\"Имя\"\n          type=\"text\"\n          value={name}\n          fullWidth\n          onChange={handleChange}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"address\"\n          label=\"Адрес\"\n          type=\"text\"\n          value={formattedAddress}\n          fullWidth\n          onChange={handleChange}\n        />\n        <FormGroup row>\n          {Object.keys(stateCheck).map((sensor) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={stateCheck[sensor]}\n                  onChange={handleChangeCheck}\n                  name={sensor}\n                  color=\"primary\"\n                />\n              }\n              key={sensor}\n              label={sensors[sensor]}\n            />\n          ))}\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => setStation(null)}\n          color=\"primary\"\n        >\n          Назад\n        </Button>\n        <Button onClick={onSave} color=\"primary\">\n          Сохранить\n        </Button>\n      </DialogActions>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          dispatch(removeStation(station._id))\n          setStation(null)\n        }}\n        style={{ margin: '12px' }}\n      >\n        Удаление станции\n      </Button>\n    </Dialog>\n  )\n}\n\nexport default Station\n","import { useState, useEffect } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Slider from '@material-ui/core/Slider'\n\nconst Radar = ({ radar, setRadar }) => {\n  const [radius, setRadius] = useState(0)\n\n  useEffect(() => {\n    setRadius(radar)\n  }, [])\n\n  return (\n    <div className=\"leaflet-bottom leaflet-right\">\n      <div className=\"leaflet-control\">\n        <Card>\n          <CardContent\n            style={{\n              width: 200,\n              margin: 8,\n              paddingTop: 12,\n              paddingBottom: 0,\n            }}\n          >\n            Радиус: {radius} км.\n            <Slider\n              value={radius}\n              marks\n              min={0}\n              max={150}\n              step={5}\n              valueLabelDisplay=\"auto\"\n              onChange={(event, newValue) =>\n                setRadius(newValue)\n              }\n              onChangeCommitted={(event, newValue) => {\n                setRadar(newValue)\n              }}\n            />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default Radar\n","import { useSelector, useDispatch } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport Chip from '@material-ui/core/Chip'\n\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined'\nimport TrackChangesOutlinedIcon from '@material-ui/icons/TrackChangesOutlined'\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined'\nimport ScheduleOutlinedIcon from '@material-ui/icons/ScheduleOutlined'\n\nimport sensors from '../app/sensorLabels'\nimport { setStation } from '../features/stations/stationsSlice'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  centerLine: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px',\n  },\n  iconSpace: {\n    marginRight: '8px',\n    flexWrap: 'wrap',\n  },\n  iconLine: {\n    flexWrap: 'wrap',\n  },\n})\n\nconst StationView = () => {\n  const classes = useStyles()\n\n  const station = useSelector(\n    (state) => state.stations.station\n  )\n  const dispatch = useDispatch()\n  const handleClose = () => {\n    dispatch(setStation(null))\n  }\n  return station ? (\n    <Dialog onClose={handleClose} open={station !== null}>\n      <DialogTitle>\n        Состояние станции {station.name}\n      </DialogTitle>\n      <DialogContent>\n        <div className={classes.centerLine}>\n          <LocationOnOutlinedIcon\n            className={classes.iconSpace}\n          />\n          {station.location.formattedAddress}\n        </div>\n        <div className={classes.centerLine}>\n          <ExploreOutlinedIcon\n            className={classes.iconSpace}\n          />\n          {station.location.coordinates.join()}\n        </div>\n        <div className={classes.centerLine}>\n          <TrackChangesOutlinedIcon\n            className={classes.iconSpace}\n          />\n          <span className={classes.iconLine}>\n            {station.sensors.length > 0\n              ? station.sensors.map((sensor) => (\n                  <Chip\n                    label={sensors[sensor]}\n                    key={sensors[sensor]}\n                    variant=\"outlined\"\n                    className={classes.iconSpace}\n                  />\n                ))\n              : 'Отсутствует'}\n          </span>\n        </div>\n        <div className={classes.centerLine}>\n          <ScheduleOutlinedIcon\n            className={classes.iconSpace}\n          />{' '}\n          Создана:{' '}\n          {new Date(station.createdAt).toLocaleDateString()}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          onClick={handleClose}\n          color=\"primary\"\n        >\n          Закрыть\n        </Button>\n      </DialogActions>\n    </Dialog>\n  ) : null\n}\n\nexport default StationView\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport L, { circle } from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  Circle,\n  useMapEvent,\n} from 'react-leaflet'\n\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport ToggleSide from './ToggleSide.js'\nimport Sidebar from './Sidebar.js'\nimport MapInfo from './MapInfo.js'\nimport Station from './forms/Station'\nimport Radar from './Radar.js'\nimport StationView from './StationView.js'\n\nimport { createStation } from '../features/stations/stationsAPI'\nimport {\n  loading as stationLoading,\n  loaded as stationLoaded,\n  loadStationsRadius,\n  loadStationsBox,\n  setStation as setViewStation,\n} from '../features/stations/stationsSlice'\n\nconst StationsRectangle = ({ radar }) => {\n  const dispatch = useDispatch()\n  const map = useMapEvent({\n    moveend(e) {\n      if (!radar) {\n        loadStations(map.getBounds())\n      }\n    },\n  })\n  const loadStations = (bounds) => {\n    dispatch(\n      loadStationsBox(bounds._southWest, bounds._northEast)\n    )\n  }\n\n  useEffect(() => {\n    if (!radar) loadStations(map.getBounds())\n  }, [radar])\n\n  useEffect(() => {\n    loadStations(map.getBounds())\n  }, [])\n\n  return null\n}\n\nconst RadarCircle = ({ radar }) => {\n  const dispatch = useDispatch()\n  const circleRef = useRef()\n  const [position, setPosition] = useState(null)\n\n  const map = useMapEvent({\n    moveend(e) {\n      setPosition(map.getCenter())\n    },\n  })\n\n  useEffect(() => {\n    if (map) setPosition(map.getCenter())\n  }, [map])\n  useEffect(() => {\n    if (circleRef.current) {\n      map.fitBounds(circleRef.current.getBounds())\n    }\n  }, [radar, map])\n  useEffect(() => {\n    if (position) {\n      dispatch(loadStationsRadius(position, radar))\n    }\n  }, [position])\n\n  return position === null ? null : (\n    <Circle\n      center={position}\n      radius={radar * 1000}\n      fill={true}\n      fillOpacity={0.1}\n      opacity={0.9}\n      ref={circleRef}\n    />\n  )\n}\n\nconst Main = ({ center, zoom }) => {\n  L.Icon.Default.imagePath = '/images/'\n\n  const dispatch = useDispatch()\n  const loading = useSelector(\n    (state) => state.stations.loading\n  )\n  const location = useSelector(\n    (state) => state.stations.location\n  )\n  const stations = useSelector(\n    (state) => state.stations.stations\n  )\n\n  const [newStation, setNewStation] = useState(null)\n  const addNewStation = async (latlng) => {\n    dispatch(stationLoading())\n    try {\n      const newStation = await createStation(latlng)\n      setNewStation(newStation)\n      console.log(newStation)\n    } catch {\n      console.log('Не получается создать новую станцию!')\n    }\n    dispatch(stationLoaded())\n  }\n\n  const [addStation, setAddStation] = useState(false)\n  const setAddMode = (mode) => {\n    setAddStation(mode)\n  }\n  const [viewSidebar, setViewSidebar] = useState(false)\n  const toggleSidebar = () => {\n    setViewSidebar(!viewSidebar)\n  }\n\n  const [radar, setRadar] = useState(null)\n\n  const [map, setMap] = useState(null)\n  useEffect(() => {\n    if (map) {\n      map.setView(location, map.getZoom())\n      setTimeout(function () {\n        map.setZoom(map.getZoom())\n      }, 500)\n    }\n  }, [location, map])\n\n  return (\n    <>\n      <Backdrop\n        open={loading}\n        style={{ zIndex: 1201, color: '#fff' }}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <StationView />\n\n      <MapContainer\n        center={center}\n        zoom={zoom}\n        scrollWheelZoom={true}\n        zoomControl={false}\n        whenCreated={setMap}\n        style={{ cursor: addStation ? 'crosshair' : '' }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {radar && <RadarCircle radar={radar} />}\n        <StationsRectangle radar={radar} />\n\n        {stations.map((el) => (\n          <Marker\n            position={el.location.coordinates}\n            key={el._id}\n            eventHandlers={{\n              click: () => {\n                dispatch(setViewStation(el))\n              },\n            }}\n          >\n            <Tooltip>\n              {el.name} <br /> {el.address}\n            </Tooltip>\n          </Marker>\n        ))}\n        {addStation ? (\n          <MapInfo\n            setAddMode={setAddMode}\n            addNewStation={addNewStation}\n          />\n        ) : null}\n      </MapContainer>\n\n      {radar && <Radar radar={radar} setRadar={setRadar} />}\n      <ToggleSide toggleSidebar={toggleSidebar} />\n      <Sidebar\n        open={viewSidebar}\n        toggleSidebar={toggleSidebar}\n        adding={addStation}\n        setAddMode={setAddMode}\n        setStation={setNewStation}\n        radar={radar}\n        setRadar={setRadar}\n      />\n      {newStation && (\n        <Station\n          station={newStation}\n          setStation={setNewStation}\n        />\n      )}\n    </>\n  )\n}\n\nMain.defaultProps = {\n  center: [59.889651, 29.87631],\n  zoom: 10,\n  stations: [],\n}\n\nexport default Main\n","import { configureStore } from '@reduxjs/toolkit'\nimport usersReducer from '../features/users/usersSlice'\nimport stationsReducer from '../features/stations/stationsSlice'\n\nexport default configureStore({\n  reducer: {\n    users: usersReducer,\n    stations: stationsReducer,\n  },\n})\n","import { useEffect } from 'react'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport blue from '@material-ui/core/colors/blue'\n\nimport Main from './components/Main'\nimport setAuthToken from './app/setAuthToken'\nimport store from './app/store'\nimport { loadUser } from './features/users/usersSlice'\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nconst App = () => {\n  const theme = createMuiTheme({\n    palette: {\n      primary: blue,\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  })\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport store from './app/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}